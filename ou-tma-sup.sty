%%
%% This is file `ou-tma-sup.sty',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% ou-tma-supp.dtx  (with options: `package')
%%
%% This is a generated file.
%%
%% Copyright (C) 2025 by G. I. Riley <geoffr@adaso.com>
%% --------------------------------------------------------------------------
%% This work may be distributed and/or modified under the
%% conditions of the LaTeX Project Public License, either version 1.3
%% of this license or (at your option) any later version.
%% The latest version of this license is in
%%   http://www.latex-project.org/lppl.txt
%% and version 1.3 or later is part of all distributions of LaTeX
%% version 2005/12/01 or later.
%%
\NeedsTeXFormat{LaTeX2e}[2023-11-01]
\ProvidesPackage{ou-tma-sup}
[2025-07-20 v0.11 OU-TMA-SUP package]
%% ou-tma-sup.sty
%% Copyright 2025 G. I. Riley <geoffr@adaso.com>
%% This package may be freely used, especially by, but not limited to,
%% students, lecturers and staff of the Open University. It was created
%% by the efforts of many who are now or have been connected with the
%% Open University Students Association. No acknowledgement is
%% _required_ for using this package within the production of a _Tutor
%% Marked Assessment._
\RequirePackage{expl3} % LaTeX3 "experimental"
\RequirePackage{ou-tma} % main ou-tma package
% ------------------------------------------------------------------------------
% README / Package Summary
% ------------------------------------------------------------------------------
% This package provides macros for formatting numeric approximations, probability
% expressions, monetary values, and statistical diagrams, using expl3 and siunitx.
% It is intended for typesetting mathematics and statistics answers in OU TMAs.
%
% ----------------------
% Main formatting commands
% ----------------------
% \tmadp[<options>]{<value(s)>}[<unit>]  % Round to <n> decimal places
% \tmasf[<options>]{<value(s)>}[<unit>]  % Round to <n> significant figures
%
% <value(s)> should be either:
%   - {x, n}           for one value to n dp/sf
%   - {x, y, n}        for a range from x to y to n dp/sf
%
% Optional [<options>] may include:
%   style=bracket      % for bracketed range: (x, y)
%   style=to (default) % for range using 'x to y'
%
% ----------------------
% Other useful commands
% ----------------------
% \prob{event}              % Formats P(event) in upright font
% \Pounds{amount}           % Formats amount in £ with two dp, e.g. £3.45
% \FiveStats[<n>]{min}{max}{med}{Q1}{Q3}
%     Draws a 5-number summary diagram using TikZ.
%     Optional argument: n = sample size (e.g. \FiveStats[30]{1}{10}{5.5}{3}{8})
% ------------------------------------------------------------------------------
%% Package Initialisation
\RequirePackage{amsmath}
\RequirePackage{ifthen}

\RequirePackage{siunitx}
\sisetup{per-mode = symbol}
\sisetup{uncertainty-mode = separate}

\RequirePackage{tikz}
\RequirePackage{pgfplots}
\usepgfplotslibrary[units]
\usetikzlibrary{angles,
    quotes,
    calc,
    arrows.meta,
    positioning,
    decorations.markings}

% Make a question subpart with an extension, eg: Q1.a.i-1
% Usage:
%  \qsubparte[n]{ext}
%  where n is an optional value to reset the counter, a decimal value,
%          omitted or zero continues the previous count.
%    and ext is the required extension string.
\NewDocumentCommand{\qsubparte}{O{0}m}{
    {
        \iftma@roman
            \renewcommand{\theqsubpart}{\alph{qsubpart}-#2}
        \else
            \renewcommand{\theqsubpart}{\roman{qsubpart}-#2}
        \fi
        \qsubpart[#1]
    }
}

\ExplSyntaxOn

\tl_if_exist:NF \l__tma_style_tl { \tl_new:N \l__tma_style_tl }

\keys_define:nn { tma }
{
    style .choice:,
    style / to .code:n = { \tl_set:Nn \l__tma_style_tl {to} },
    style / bracket .code:n = { \tl_set:Nn \l__tma_style_tl {bracket} },
    style .initial:n = to,
}

% Parameters for \tmadp and \tmasf:
%  #1: keyval options like [style=bracket]
%  #2: data (e.g. 1.2, 3.4, 2)
%  #3: optional unit
%  #4: mode (dp or sf)
\NewDocumentCommand{\tmadp}{O{}mO{}}{
    \tma_format:nnnn {#1} {#2} {#3} {dp}
}

\NewDocumentCommand{\tmasf}{O{}mO{}}{
    \tma_format:nnnn {#1} {#2} {#3} {sf}
}

\cs_new_protected:Nn \tma_format:nnnn
{
    \keys_set:nn { tma } {#1}
    \iow_term:x {Style~set~to~\l__tma_style_tl}
    \tma_parse:nnn {#2} {#3} {#4}
}

\cs_new_protected:Nn \tma_parse:nnn
{
    \clist_set:Nn \l_tmpa_clist {#1}
    \int_case:nnF { \clist_count:N \l_tmpa_clist }
    {
        {2} {
            \tma_format_single:nnnn
            { \clist_item:Nn \l_tmpa_clist {1} }
            { \clist_item:Nn \l_tmpa_clist {2} }
            {#2} % unit
            {#3} % mode
        }
        {3} {
            \tma_format_range:nnnnn
            { \clist_item:Nn \l_tmpa_clist {1} }
            { \clist_item:Nn \l_tmpa_clist {2} }
            { \clist_item:Nn \l_tmpa_clist {3} }
            {#2} % unit
            {#3} % mode
        }
    }
    {
        \textbf{Error: expected 2 or 3 comma-separated values.}
    }
}

\cs_new_protected:Nn \tma_format_single:nnnn
{
    \tl_if_blank:nTF {#3}
    {
        \use:x
        {
            \num[
            round-mode = \tma_mode:n {#4},
            round-precision = #2
            ]{#1}
        }
        \text{~(to~#2~\tma_mode_label:n {#4})}
    }
    {
        \use:x
        {
            \qty[
            round-mode = \tma_mode:n {#4},
            round-precision = #2
            ]{#1}{#3}
        }
        \text{~(to~#2~\tma_mode_label:n {#4})}
    }
}

\cs_new_protected:Nn \tma_format_range:nnnnn
{
    %\iow_term:x {Entered~\tma_format_range:nnnnn}
    \tl_if_blank:nTF {#4}
    {
        \tl_if_eq:NnTF \l__tma_style_tl {bracket}
        {
            \tma_output_bracketed_range:nnnnn {#1} {#2} {#3} {#4} {#5}
        }
        {
            \use:x
            {
                \num[round-mode = \tma_mode:n {#5}, round-precision = #3]{#1}
                \text{~to~}
                \num[round-mode = \tma_mode:n {#5}, round-precision = #3]{#2}
                \text{~(to~#3~\tma_mode_label:n {#5})}
            }
        }
    }
    {
        \tl_if_eq:NnTF \l__tma_style_tl {bracket}
        {
            \tma_output_bracketed_range:nnnnn {#1} {#2} {#3} {#4} {#5}
        }
        {
            \use:x
            {
                \qty[round-mode = \tma_mode:n {#5}, round-precision = #3]{#1}{#4}
                \text{~to~}
                \qty[round-mode = \tma_mode:n {#5}, round-precision = #3]{#2}{#4}
                \text{~(to~#3~\tma_mode_label:n {#5})}
            }
        }
    }
}

\tl_new:N \l__tma_tmp_math_tl
\tl_new:N \l__tma_tmp_text_tl
\tl_new:N \l__tma_tmp_options_tl

\cs_new_protected:Nn \tma_output_bracketed_range:nnnnn
{
    %\iow_term:n {Entered~\tma_output_bracketed_range:nnnnn}

    % Expand options NOW so siunitx is happy
    \tl_set:Nx \l__tma_tmp_options_tl
    {
        round-mode = \tma_mode:n {#5},
        round-precision = #3
    }

    \tl_set:Nn \l__tma_tmp_math_tl
    {
        ( \use:x { \qty[\l__tma_tmp_options_tl]{#1}{#4} },~
        \use:x { \qty[\l__tma_tmp_options_tl]{#2}{#4} } )
        \text{~(to~#3~\tma_mode_label:n {#5})}
    }
    %\iow_term:n {Setup~\\l__tma_tmp_math_tl}

    \tl_set:Nn \l__tma_tmp_text_tl
    {
        \text{(}
        \use:x { \qty[\l__tma_tmp_options_tl]{#1}{#4} },~
        \use:x { \qty[\l__tma_tmp_options_tl]{#2}{#4} }
        \text{)}~\text{(to~#3~\tma_mode_label:n {#5})}
    }
    %\iow_term:n {Setup~\\l__tma_tmp_text_tl}

    \mode_if_math:TF
    {
        \iow_term:n {Range~print~in~maths~mode}
        \tl_use:N \l__tma_tmp_math_tl
    }
    {
        \iow_term:n {Range~print~in~text~mode}
        \tl_use:N \l__tma_tmp_text_tl
    }
}

\cs_new:Npn \tma_mode:n #1
{
    \str_case:nn {#1}
    {
        {dp}{places}
        {sf}{figures}
    }
}

\cs_new:Npn \tma_mode_label:n #1
{
    \str_case:nn {#1}
    {
        {dp}{dp}
        {sf}{sf}
    }
}

\ExplSyntaxOff


% Print a value in Pounds Sterling
\NewDocumentCommand{\Pounds}{m}{%
    \pounds\,\num[round-precision=2,round-mode=places,round-integer-to-decimal]{#1}%
}

% Print the five stats `square' with the provided values
% Arguments: #1 (Optional) number of samples
%            #2 Extreme minimum value
%            #3 Extreme Maximum value
%            #4 Mean average
%            #5 Seccond quartile value
%            #6 Fourth quartile value
\NewDocumentCommand{\FiveStats}{o mmmmm}{%
    \begingroup
    \tikzset{
        every node/.style   = {font=\footnotesize,inner sep=0pt},
        number/.style       = {text depth=0pt},      % tidy baselines
    }
    %--- global layout knobs you might like to tweak --------
    \def\Pad   {3pt}        % white-space between numbers and walls
    \def\XGap  {25mm}       % distance between the L & R interior columns
    \def\Row   {1.7em}      % vertical separation between rows
    %--------------------------------------------------------

    \begin{tikzpicture}[baseline=(med.base)]
        % reference x–coordinates for the two interior columns
        \coordinate (IL) at (0,0);          % interior-left column
        \coordinate (IR) at (\XGap,0);      % interior-right column

        %---------------- Numbers -----------------
        \node[number] (med)  at ($ (IL)!0.5!(IR) $) {#4};

        \node[number,anchor=west] (q1)  at ($(IL)+(0,-\Row)$)       {#5};
        \node[number,anchor=west] (min) at ($(IL)+(0,-2*\Row)$)     {#2};

        \node[number,anchor=east] (q3)  at ($(IR)+(0,-\Row)$)       {#6};
        \node[number,anchor=east] (max) at ($(IR)+(0,-2*\Row)$)     {#3};

        \IfNoValueF{#1}{
            % sample size
            \node[number,anchor=east] (n) at ($(IL)+(-2*\Pad,-\Row)$) {$n = #1$};
        }

        %---------------- Frame -------------------
        \coordinate (TL) at ($(q1.west |- med.north)  + (-\Pad,\Pad)$);
        \coordinate (TR) at ($(q3.east |- med.north)  + ( \Pad,\Pad)$);
        \coordinate (BL) at ($(q1.west |- min.south) + (-\Pad,-\Pad)$);
        \coordinate (BR) at ($(q3.east |- min.south) + ( \Pad,-\Pad)$);

        % draw: top, right, and left edges
        \draw[cyan, line width=.4pt] (BL) -- (TL) -- (TR) -- (BR);
    \end{tikzpicture}%
    \endgroup
}

\ExplSyntaxOn

% Main \prob command
\NewDocumentCommand{\prob}{m}
{
    \prob_prob:n { #1 }
}

% Internal implementation with local keyword overrides
\cs_new_protected:Nn \prob_prob:n
{
    P\left(
    \group_begin:
    % Locally redefine LaTeX primitives — safely!
    \cs_set_eq:NN \oldand \and
    \cs_set_eq:NN \oldor \or
    \cs_set_eq:NN \oldbar \bar
    \cs_set_eq:NN \oldnot \not

    \cs_set:Npn \and { \;\textit{and}\; }
    \cs_set:Npn \or  { \;\textit{or}\; }
    \cs_set:Npn \bar { \mid }
    \cs_set:Npn \not { \textit{not}\; }

    #1
    \group_end:
    \right)
}

\ExplSyntaxOff

\newcommand{\pflag}{\ensuremath{[+]}}
\newcommand{\nflag}{\ensuremath{[-]}}


%% End of Package

\endinput
%%
%% End of file `ou-tma-sup.sty'.
